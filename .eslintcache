[{"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\index.js":"1","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\reportWebVitals.js":"2","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\App.js":"3","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\redux\\redux-store.js":"4","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\redux\\dialogsReducer.js":"5","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\redux\\messagesReducer.js":"6","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Messanger.jsx":"7","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Messages\\WindowContainer.jsx":"8","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Dialogs\\DialogsContainer.jsx":"9","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Messages\\Window.jsx":"10","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Dialogs\\Dialogs.jsx":"11","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Messages\\Message\\Message.jsx":"12","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"13","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Authorization\\Auth.jsx":"14","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\redux\\authReducer.js":"15","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Authorization\\AuthContainer.jsx":"16"},{"size":565,"mtime":1616928861737,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":645,"mtime":1616929194865,"results":"20","hashOfConfig":"18"},{"size":392,"mtime":1614072629097,"results":"21","hashOfConfig":"18"},{"size":1084,"mtime":1614072372471,"results":"22","hashOfConfig":"18"},{"size":1722,"mtime":1617041940544,"results":"23","hashOfConfig":"18"},{"size":632,"mtime":1617040947680,"results":"24","hashOfConfig":"18"},{"size":788,"mtime":1616927884021,"results":"25","hashOfConfig":"18"},{"size":541,"mtime":1616929842012,"results":"26","hashOfConfig":"18"},{"size":1549,"mtime":1617041443541,"results":"27","hashOfConfig":"18"},{"size":3635,"mtime":1617040705317,"results":"28","hashOfConfig":"18"},{"size":724,"mtime":1617042131546,"results":"29","hashOfConfig":"18"},{"size":1224,"mtime":1617040175726,"results":"30","hashOfConfig":"18"},{"size":3320,"mtime":1617039025165,"results":"31","hashOfConfig":"18"},{"size":1763,"mtime":1616930157306,"results":"32","hashOfConfig":"18"},{"size":837,"mtime":1616929268318,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yqn5o0",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\index.js",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\reportWebVitals.js",[],["71","72"],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\App.js",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\redux\\redux-store.js",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\redux\\dialogsReducer.js",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\redux\\messagesReducer.js",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Messanger.jsx",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Messages\\WindowContainer.jsx",["73"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {updateNewMessageActionCreator, sendMessageActionCreator} from '../redux/messagesReducer';\r\nimport MainWindow from './Window';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.messagesInfo.messages,\r\n        newMessage: state.messagesInfo.newMessage,\r\n        userInfo: state.userInfo\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendNewMessage: () => {\r\n            dispatch(sendMessageActionCreator())\r\n        },\r\n        onChangeMessage: (text) => {\r\n            dispatch(updateNewMessageActionCreator(text))\r\n        }\r\n    }\r\n}\r\n\r\nconst WindowContainer = connect(mapStateToProps, mapDispatchToProps)(MainWindow);\r\n\r\nexport default WindowContainer;","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Dialogs\\DialogsContainer.jsx",["74"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Dialogs from './Dialogs';\r\nimport {setDialogsAC} from '../redux/dialogsReducer';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: state.userInfo.dialogs\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setDialogs: (dialogs) => {\r\n            dispatch(setDialogsAC(dialogs))\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Messages\\Window.jsx",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Dialogs\\Dialogs.jsx",["75","76"],"import React from 'react';\r\n\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport * as axios from 'axios';\r\nimport css from './Dialogs.module.css';\r\n\r\nexport default class Dialogs extends React.Component {\r\n    // if (props.dialogsData.length === 0) {\r\n    //     axios.get('').then((dialogInfo) => {\r\n    //         props.setDialogs(dialogInfo);\r\n    //     });\r\n    //     props.setDialogs([{\r\n    //         id: 1, \r\n    //         name: 'Александр', \r\n    //         message: 'Привет!', \r\n    //         fromMe: true\r\n    //     },\r\n    //     {\r\n    //         id: 2, \r\n    //         name: 'Виктор', \r\n    //         message: 'Хей', \r\n    //         fromMe: false\r\n    //     },\r\n    //     {\r\n    //         id: 3, \r\n    //         name: 'Анастасия', \r\n    //         message: 'Давай погуляем?', \r\n    //         fromMe: false\r\n    //     },\r\n    //     {\r\n    //         id: 4, \r\n    //         name: 'Даниил', \r\n    //         message: 'посмотри тут интересные штуки показывают', \r\n    //         fromMe: true\r\n    //     },\r\n    //     {\r\n    //         id: 5, \r\n    //         name: 'Кирилл', \r\n    //         message: 'Как дела?', \r\n    //         fromMe: false\r\n    //     },\r\n    //     {\r\n    //         id: 6, \r\n    //         name: 'Дарья', \r\n    //         message: 'Алаалалалалалал', \r\n    //         fromMe: false\r\n    //     }]);\r\n    // }\r\n    constructor() {\r\n        super();\r\n    }\r\n    render() {\r\n        const DialogData = this.props.dialogsData.map((el) => \r\n            <DialogItem \r\n                id={1} \r\n                name={el.name}\r\n                message={el.message}\r\n                photoId={el.photoId}\r\n                fromMe={false} \r\n            />\r\n        );\r\n        return (\r\n            <div className={css.scroll}>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n                <div>\r\n                    {DialogData}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Messages\\Message\\Message.jsx",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",["77","78"],"import React from 'react';\r\n\r\nimport css from './DialogItem.module.css';\r\n\r\nexport default class DialogItem extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n    }\r\n    render() {\r\n        let message;\r\n        if (this.props.fromMe) {\r\n            message = \r\n            <div className={css.withYou}>\r\n                <div className={css.you}>\r\n                    Вы:\r\n                </div>\r\n                <div className={css.message}>\r\n                    {this.props.message}\r\n                </div>\r\n            </div>\r\n        } else {\r\n            message = \r\n            <div className={css.messageBlock, css.message}>\r\n                {this.props.message}\r\n            </div>\r\n        }\r\n        return (\r\n            <div className={css.dialogBlock}>\r\n                <div className={css.blockItem}>\r\n                    <img className={css.photo} src={this.props.photoId}></img>\r\n                    <div className={css.info}>\r\n                        <div className={css.name}>\r\n                            {this.props.name}\r\n                        </div>\r\n                        {message}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Authorization\\Auth.jsx",["79","80"],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\redux\\authReducer.js",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Authorization\\AuthContainer.jsx",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":8,"nodeType":"87","messageId":"88","endLine":1,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":1,"column":8,"nodeType":"87","messageId":"88","endLine":1,"endColumn":13},{"ruleId":"85","severity":1,"message":"89","line":4,"column":13,"nodeType":"87","messageId":"88","endLine":4,"endColumn":18},{"ruleId":"90","severity":1,"message":"91","line":49,"column":5,"nodeType":"92","messageId":"93","endLine":51,"endColumn":6},{"ruleId":"94","severity":1,"message":"95","line":23,"column":45,"nodeType":"96","messageId":"97","endLine":23,"endColumn":46},{"ruleId":"98","severity":1,"message":"99","line":30,"column":21,"nodeType":"100","endLine":30,"endColumn":73},{"ruleId":"85","severity":1,"message":"101","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":15},{"ruleId":"102","severity":1,"message":"103","line":56,"column":29,"nodeType":"100","endLine":56,"endColumn":85},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'mainPNG' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]