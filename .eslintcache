[{"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\index.js":"1","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\reportWebVitals.js":"2","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\App.js":"3","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\redux\\redux-store.js":"4","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\redux\\dialogsReducer.js":"5","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\redux\\messagesReducer.js":"6","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Messanger.jsx":"7","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Messages\\WindowContainer.jsx":"8","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Dialogs\\DialogsContainer.jsx":"9","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Messages\\Window.jsx":"10","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Messages\\Message\\Message.jsx":"11","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"12","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\redux\\authReducer.js":"13","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Authorization\\AuthContainer.jsx":"14","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Dialogs\\AddDialog\\AddDialog.jsx":"15","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Authorization\\Auth.jsx":"16","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Authorization\\Registration\\Registration.jsx":"17","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Dialogs\\Dialogs.jsx":"18"},{"size":565,"mtime":1617367740023,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":626,"mtime":1617382558092,"results":"22","hashOfConfig":"20"},{"size":379,"mtime":1617367740021,"results":"23","hashOfConfig":"20"},{"size":2002,"mtime":1617367740014,"results":"24","hashOfConfig":"20"},{"size":2102,"mtime":1617389440134,"results":"25","hashOfConfig":"20"},{"size":611,"mtime":1617367740002,"results":"26","hashOfConfig":"20"},{"size":864,"mtime":1617390154757,"results":"27","hashOfConfig":"20"},{"size":1345,"mtime":1617367739965,"results":"28","hashOfConfig":"20"},{"size":3462,"mtime":1617390166308,"results":"29","hashOfConfig":"20"},{"size":725,"mtime":1617367739967,"results":"30","hashOfConfig":"20"},{"size":1664,"mtime":1617389413684,"results":"31","hashOfConfig":"20"},{"size":4003,"mtime":1617367740006,"results":"32","hashOfConfig":"20"},{"size":1818,"mtime":1617367739947,"results":"33","hashOfConfig":"20"},{"size":3911,"mtime":1617367739956,"results":"34","hashOfConfig":"20"},{"size":5303,"mtime":1617389961080,"results":"35","hashOfConfig":"20"},{"size":5874,"mtime":1617367739952,"results":"36","hashOfConfig":"20"},{"size":4371,"mtime":1617389643740,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1yqn5o0",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\index.js",[],["77","78"],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\reportWebVitals.js",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\App.js",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\redux\\redux-store.js",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\redux\\dialogsReducer.js",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\redux\\messagesReducer.js",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Messanger.jsx",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Messages\\WindowContainer.jsx",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Dialogs\\DialogsContainer.jsx",["79"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport Dialogs from './Dialogs';\nimport {setDialogsAC} from '../redux/dialogsReducer';\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsData: state.dialogsInfo.dialogsData\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        setDialogs: (dialogs) => {\n            dispatch(setDialogsAC(dialogs))\n        }\n    }\n}\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n\nexport default DialogsContainer;","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Messages\\Window.jsx",["80"],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Messages\\Message\\Message.jsx",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",["81","82"],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\redux\\authReducer.js",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Authorization\\AuthContainer.jsx",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Dialogs\\AddDialog\\AddDialog.jsx",[],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Authorization\\Auth.jsx",["83"],"C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Authorization\\Registration\\Registration.jsx",["84"],"import React from 'react';\nimport axios from 'axios';\n\nimport './Registration.css';\n\nexport default class Registration extends React.Component {\n    constructor() {\n        super();\n        this.registation = this.registation.bind(this);\n        this.closeDialog = this.closeDialog.bind(this);\n        this.onChangeRegLogin = this.onChangeRegLogin.bind(this);\n        this.onChangeRegPassword = this.onChangeRegPassword.bind(this);\n        this.onChangeRegPhoto = this.onChangeRegPhoto.bind(this);\n    }\n    \n    login = React.createRef();\n    password = React.createRef();\n    photoSrc = React.createRef();\n\n    onChangeRegLogin() {\n        let newLogin = this.login.current.value;\n        this.props.updateRegLogin(newLogin);\n    }\n\n    onChangeRegPassword() {\n        let newPassword = this.password.current.value;\n        this.props.updateRegPassword(newPassword);\n    }\n\n    onChangeRegPhoto() {\n        let newPhoto = this.photoSrc.current.value;\n        this.props.updateRegPhoto(newPhoto);\n    }\n\n    registation() {\n        let login = this.login.current.value;\n        let password = this.password.current.value;\n        let image = this.photoSrc.current.value;\n        if (!login) {\n            this.props.updateErrorMessage('Пустой логин');\n        } else if (!password) {\n            this.props.updateErrorMessage('Пустой пароль');\n        } else {\n            axios.post('http://127.0.0.1:5000/registration', {\n                login,\n                password,\n                image\n            }).then((response) => {\n                if (response.data.result) {\n                    this.props.updateMainInfoUser(response.data.userInfo.self_id);\n                    this.props.activateRegDialog(false);\n                    this.props.history.push('/messanger');\n                } else {\n                    if (response.data.errorMessage === 'Already existing user') {\n                        this.props.updateErrorMessage('Данный логин занят');\n                    }\n                }\n            });\n        }\n    }\n\n    closeDialog() {\n        this.props.activateDialog(false);\n        this.login.current.value = '';\n        this.password.current.value = '';\n        this.props.updateErrorMessage('');\n    }\n\n    render() {\n        return(\n            <div className={this.props.active ? 'window active' : 'window'}>\n                <div className={this.props.active ? 'content_reg active' : 'content_reg'}>\n                    <div className='inputInfoBlock'>\n                        <div className='reg_input'>\n                            <div>\n                                <div className='inputText'>\n                                    Введите желаемый логин: \n                                </div>\n                                <div>\n                                    <input \n                                        ref={this.login} \n                                        className='inputBlock'\n                                        value={this.props.regLogin} \n                                        onChange={this.onChangeRegLogin} />\n                                </div>\n                            </div>\n                            <div className='inputPassword'>\n                                <div className='inputText'>\n                                    Введите пароль: \n                                </div>\n                                <div>\n                                    <input \n                                        ref={this.password} \n                                        className='inputBlock'\n                                        value={this.props.regPassword} \n                                        onChange={this.onChangeRegPassword} />\n                                </div>\n                            </div>\n                            <div className='errorTextBlock'>\n                                <span className='errorText'>{this.props.errorMessage}</span>\n                            </div>\n                        </div>\n                        <div className='inputPhotoBlock'>\n                            <div className='photoBlock'>\n                                <img className='photo' src={this.props.photoSrc}></img>\n                            </div>\n                            <div>\n                            <div className='inputText'>\n                                    Вставьте ссылку на фото: \n                                </div>\n                                <div>\n                                    <input \n                                        ref={this.photoSrc} \n                                        className='inputBlock'\n                                        value={this.props.photoSrc} \n                                        onChange={this.onChangeRegPhoto} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='reg_buttons'>\n                        <div className='reg_button'>\n                            <button className='cancelButton' onClick={this.closeDialog}>\n                                <span className='buttonText'>\n                                    Отменить\n                                </span>\n                            </button>\n                        </div>\n                        <div>\n                            <button className='regButton' onClick={this.registation}>\n                                <span className='buttonText'>\n                                    Зарегестрироваться\n                                </span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","C:\\Users\\Daniil\\Desktop\\123\\Tensor-app\\src\\components\\Dialogs\\Dialogs.jsx",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":8,"nodeType":"91","messageId":"92","endLine":1,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":54,"column":25,"nodeType":"95","endLine":56,"endColumn":56},{"ruleId":"96","severity":1,"message":"97","line":36,"column":45,"nodeType":"98","messageId":"99","endLine":36,"endColumn":46},{"ruleId":"93","severity":1,"message":"94","line":44,"column":21,"nodeType":"95","endLine":44,"endColumn":73},{"ruleId":"89","severity":1,"message":"100","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":105,"column":33,"nodeType":"95","endLine":105,"endColumn":82},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'mainPNG' is defined but never used.","no-global-assign","no-unsafe-negation"]